#+BEGIN_EXPORT html
<h1>Bootstrapping an Extensible Toolchain</h1>
#+END_EXPORT

#+BEGIN_SRC emacs-lisp :tangle (concat (getenv "ROOT") "/scripts/tangle-org.el")
(require 'org)
(setq org-src-preserve-indentation t)
(org-babel-tangle)
#+END_SRC

#+BEGIN_SRC makefile :tangle (concat (getenv "ROOT") "/bootstrap.mk")
GENSASS :=
CONTENTS :=
GENFILES += org.mk scripts/export-org.el coq.mk \
            sass.mk ${SASS} templates/main.html \
            soupault.conf

include org.mk coq.mk sass.mk

EMACS := ROOT="${ROOT}" emacs
TANGLEARGS := --batch \
              --load="${ROOT}/scripts/tangle-org.el" \
              2>/dev/null

build : ${CONTENTS} ${GENFILES}
	@echo "     run  soupault"
	@soupault
	@echo "  update  .gitignore"
	@scripts/update-gitignore.sh ${CONTENTS} ${GENFILES} ${GENSASS}

clean :
	@echo "  remove  generated files"
	@rm -rf ${CONTENTS} ${GENFILES} build/

force : clean build

soupault.conf : ${CLEODIR}/Soupault.org
	@echo "  tangle  $<"
	@${EMACS} $< ${TANGLEARGS}

org.mk scripts/export-org.el site/style/org.sass \
coq.mk site/style/coq.sass \
  &: ${CLEODIR}/Contents.org
	@echo "  tangle  $<"
	@${EMACS} $< ${TANGLEARGS}

sass.mk ${SASS} templates/main.html \
  &: ${CLEODIR}/Theme.org
	@echo "  tangle  $<"
	@${EMACS} $< ${TANGLEARGS}
#+END_SRC

# Local Variables:
# org-src-preserve-indentation: t
# End:
